### YamlMime:ManagedReference
items:
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql
  commentId: T:DotNetHelper.ObjectToSql.Services.DataTableToSql
  id: DataTableToSql
  parent: DotNetHelper.ObjectToSql.Services
  children:
  - DotNetHelper.ObjectToSql.Services.DataTableToSql.#ctor(DotNetHelper.ObjectToSql.Enum.DataBaseType,System.Boolean)
  - DotNetHelper.ObjectToSql.Services.DataTableToSql.AlwaysCreateParamaterizedSql
  - DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildDbParameterList``1(System.Data.DataRow,System.Func{System.String,System.Object,``0})
  - DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery(System.Data.DataTable,DotNetHelper.ObjectToSql.Enum.ActionType)
  - DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery(System.Data.DataTable,DotNetHelper.ObjectToSql.Enum.ActionType,System.String)
  - DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState(System.Data.DataRow)
  - DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState(System.Data.DataRow,System.String)
  - DotNetHelper.ObjectToSql.Services.DataTableToSql.DatabaseType
  - DotNetHelper.ObjectToSql.Services.DataTableToSql.SqlSyntaxHelper
  langs:
  - csharp
  - vb
  name: DataTableToSql
  nameWithType: DataTableToSql
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql
  type: Class
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: DataTableToSql
    path: ../src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
    startLine: 13
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Services
  syntax:
    content: public class DataTableToSql
    content.vb: Public Class DataTableToSql
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.DatabaseType
  commentId: P:DotNetHelper.ObjectToSql.Services.DataTableToSql.DatabaseType
  id: DatabaseType
  parent: DotNetHelper.ObjectToSql.Services.DataTableToSql
  langs:
  - csharp
  - vb
  name: DatabaseType
  nameWithType: DataTableToSql.DatabaseType
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.DatabaseType
  type: Property
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: DatabaseType
    path: ../src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
    startLine: 16
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Services
  syntax:
    content: public DataBaseType DatabaseType { get; }
    parameters: []
    return:
      type: DotNetHelper.ObjectToSql.Enum.DataBaseType
    content.vb: Public ReadOnly Property DatabaseType As DataBaseType
  overload: DotNetHelper.ObjectToSql.Services.DataTableToSql.DatabaseType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.SqlSyntaxHelper
  commentId: P:DotNetHelper.ObjectToSql.Services.DataTableToSql.SqlSyntaxHelper
  id: SqlSyntaxHelper
  parent: DotNetHelper.ObjectToSql.Services.DataTableToSql
  langs:
  - csharp
  - vb
  name: SqlSyntaxHelper
  nameWithType: DataTableToSql.SqlSyntaxHelper
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.SqlSyntaxHelper
  type: Property
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: SqlSyntaxHelper
    path: ../src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
    startLine: 17
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Services
  syntax:
    content: public SqlSyntaxHelper SqlSyntaxHelper { get; }
    parameters: []
    return:
      type: DotNetHelper.ObjectToSql.Helper.SqlSyntaxHelper
    content.vb: Public ReadOnly Property SqlSyntaxHelper As SqlSyntaxHelper
  overload: DotNetHelper.ObjectToSql.Services.DataTableToSql.SqlSyntaxHelper*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.AlwaysCreateParamaterizedSql
  commentId: P:DotNetHelper.ObjectToSql.Services.DataTableToSql.AlwaysCreateParamaterizedSql
  id: AlwaysCreateParamaterizedSql
  parent: DotNetHelper.ObjectToSql.Services.DataTableToSql
  langs:
  - csharp
  - vb
  name: AlwaysCreateParamaterizedSql
  nameWithType: DataTableToSql.AlwaysCreateParamaterizedSql
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.AlwaysCreateParamaterizedSql
  type: Property
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: AlwaysCreateParamaterizedSql
    path: ../src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
    startLine: 18
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Services
  syntax:
    content: public bool AlwaysCreateParamaterizedSql { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AlwaysCreateParamaterizedSql As Boolean
  overload: DotNetHelper.ObjectToSql.Services.DataTableToSql.AlwaysCreateParamaterizedSql*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.#ctor(DotNetHelper.ObjectToSql.Enum.DataBaseType,System.Boolean)
  commentId: M:DotNetHelper.ObjectToSql.Services.DataTableToSql.#ctor(DotNetHelper.ObjectToSql.Enum.DataBaseType,System.Boolean)
  id: '#ctor(DotNetHelper.ObjectToSql.Enum.DataBaseType,System.Boolean)'
  parent: DotNetHelper.ObjectToSql.Services.DataTableToSql
  langs:
  - csharp
  - vb
  name: DataTableToSql(DataBaseType, Boolean)
  nameWithType: DataTableToSql.DataTableToSql(DataBaseType, Boolean)
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.DataTableToSql(DotNetHelper.ObjectToSql.Enum.DataBaseType, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: .ctor
    path: ../src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
    startLine: 20
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Services
  syntax:
    content: public DataTableToSql(DataBaseType type, bool alwaysUseParamerizedSql = true)
    parameters:
    - id: type
      type: DotNetHelper.ObjectToSql.Enum.DataBaseType
    - id: alwaysUseParamerizedSql
      type: System.Boolean
    content.vb: Public Sub New(type As DataBaseType, alwaysUseParamerizedSql As Boolean = True)
  overload: DotNetHelper.ObjectToSql.Services.DataTableToSql.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery(System.Data.DataTable,DotNetHelper.ObjectToSql.Enum.ActionType)
  commentId: M:DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery(System.Data.DataTable,DotNetHelper.ObjectToSql.Enum.ActionType)
  id: BuildQuery(System.Data.DataTable,DotNetHelper.ObjectToSql.Enum.ActionType)
  parent: DotNetHelper.ObjectToSql.Services.DataTableToSql
  langs:
  - csharp
  - vb
  name: BuildQuery(DataTable, ActionType)
  nameWithType: DataTableToSql.BuildQuery(DataTable, ActionType)
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery(System.Data.DataTable, DotNetHelper.ObjectToSql.Enum.ActionType)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: BuildQuery
    path: ../src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
    startLine: 37
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Services
  syntax:
    content: public string BuildQuery(DataTable dataTable, ActionType actionType)
    parameters:
    - id: dataTable
      type: System.Data.DataTable
    - id: actionType
      type: DotNetHelper.ObjectToSql.Enum.ActionType
    return:
      type: System.String
    content.vb: Public Function BuildQuery(dataTable As DataTable, actionType As ActionType) As String
  overload: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery(System.Data.DataTable,DotNetHelper.ObjectToSql.Enum.ActionType,System.String)
  commentId: M:DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery(System.Data.DataTable,DotNetHelper.ObjectToSql.Enum.ActionType,System.String)
  id: BuildQuery(System.Data.DataTable,DotNetHelper.ObjectToSql.Enum.ActionType,System.String)
  parent: DotNetHelper.ObjectToSql.Services.DataTableToSql
  langs:
  - csharp
  - vb
  name: BuildQuery(DataTable, ActionType, String)
  nameWithType: DataTableToSql.BuildQuery(DataTable, ActionType, String)
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery(System.Data.DataTable, DotNetHelper.ObjectToSql.Enum.ActionType, System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: BuildQuery
    path: ../src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
    startLine: 52
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Services
  syntax:
    content: public string BuildQuery(DataTable dataTable, ActionType actionType, string tableName)
    parameters:
    - id: dataTable
      type: System.Data.DataTable
    - id: actionType
      type: DotNetHelper.ObjectToSql.Enum.ActionType
    - id: tableName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function BuildQuery(dataTable As DataTable, actionType As ActionType, tableName As String) As String
  overload: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState(System.Data.DataRow)
  commentId: M:DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState(System.Data.DataRow)
  id: BuildQueryFromRowState(System.Data.DataRow)
  parent: DotNetHelper.ObjectToSql.Services.DataTableToSql
  langs:
  - csharp
  - vb
  name: BuildQueryFromRowState(DataRow)
  nameWithType: DataTableToSql.BuildQueryFromRowState(DataRow)
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState(System.Data.DataRow)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: BuildQueryFromRowState
    path: ../src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
    startLine: 83
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Services
  syntax:
    content: public string BuildQueryFromRowState(DataRow dataRow)
    parameters:
    - id: dataRow
      type: System.Data.DataRow
    return:
      type: System.String
    content.vb: Public Function BuildQueryFromRowState(dataRow As DataRow) As String
  overload: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState(System.Data.DataRow,System.String)
  commentId: M:DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState(System.Data.DataRow,System.String)
  id: BuildQueryFromRowState(System.Data.DataRow,System.String)
  parent: DotNetHelper.ObjectToSql.Services.DataTableToSql
  langs:
  - csharp
  - vb
  name: BuildQueryFromRowState(DataRow, String)
  nameWithType: DataTableToSql.BuildQueryFromRowState(DataRow, String)
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState(System.Data.DataRow, System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: BuildQueryFromRowState
    path: ../src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
    startLine: 97
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Services
  syntax:
    content: public string BuildQueryFromRowState(DataRow dataRow, string tableName)
    parameters:
    - id: dataRow
      type: System.Data.DataRow
    - id: tableName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function BuildQueryFromRowState(dataRow As DataRow, tableName As String) As String
  overload: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildDbParameterList``1(System.Data.DataRow,System.Func{System.String,System.Object,``0})
  commentId: M:DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildDbParameterList``1(System.Data.DataRow,System.Func{System.String,System.Object,``0})
  id: BuildDbParameterList``1(System.Data.DataRow,System.Func{System.String,System.Object,``0})
  parent: DotNetHelper.ObjectToSql.Services.DataTableToSql
  langs:
  - csharp
  - vb
  name: BuildDbParameterList<T>(DataRow, Func<String, Object, T>)
  nameWithType: DataTableToSql.BuildDbParameterList<T>(DataRow, Func<String, Object, T>)
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildDbParameterList<T>(System.Data.DataRow, System.Func<System.String, System.Object, T>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: BuildDbParameterList
    path: ../src/DotNetHelper.ObjectToSql/Services/DataTableToSql.cs
    startLine: 303
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Services
  summary: "\nBuilds the SQL parameter list.\n"
  example: []
  syntax:
    content: >-
      public List<T> BuildDbParameterList<T>(DataRow row, Func<string, object, T> getNewParameter)
          where T : DbParameter
    parameters:
    - id: row
      type: System.Data.DataRow
    - id: getNewParameter
      type: System.Func{System.String,System.Object,{T}}
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{{T}}
      description: List&lt;DbParameter>.
    content.vb: Public Function BuildDbParameterList(Of T As DbParameter)(row As DataRow, getNewParameter As Func(Of String, Object, T)) As List(Of T)
  overload: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildDbParameterList*
  nameWithType.vb: DataTableToSql.BuildDbParameterList(Of T)(DataRow, Func(Of String, Object, T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildDbParameterList(Of T)(System.Data.DataRow, System.Func(Of System.String, System.Object, T))
  name.vb: BuildDbParameterList(Of T)(DataRow, Func(Of String, Object, T))
references:
- uid: DotNetHelper.ObjectToSql.Services
  commentId: N:DotNetHelper.ObjectToSql.Services
  name: DotNetHelper.ObjectToSql.Services
  nameWithType: DotNetHelper.ObjectToSql.Services
  fullName: DotNetHelper.ObjectToSql.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.DatabaseType*
  commentId: Overload:DotNetHelper.ObjectToSql.Services.DataTableToSql.DatabaseType
  name: DatabaseType
  nameWithType: DataTableToSql.DatabaseType
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.DatabaseType
- uid: DotNetHelper.ObjectToSql.Enum.DataBaseType
  commentId: T:DotNetHelper.ObjectToSql.Enum.DataBaseType
  parent: DotNetHelper.ObjectToSql.Enum
  name: DataBaseType
  nameWithType: DataBaseType
  fullName: DotNetHelper.ObjectToSql.Enum.DataBaseType
- uid: DotNetHelper.ObjectToSql.Enum
  commentId: N:DotNetHelper.ObjectToSql.Enum
  name: DotNetHelper.ObjectToSql.Enum
  nameWithType: DotNetHelper.ObjectToSql.Enum
  fullName: DotNetHelper.ObjectToSql.Enum
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.SqlSyntaxHelper*
  commentId: Overload:DotNetHelper.ObjectToSql.Services.DataTableToSql.SqlSyntaxHelper
  name: SqlSyntaxHelper
  nameWithType: DataTableToSql.SqlSyntaxHelper
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.SqlSyntaxHelper
- uid: DotNetHelper.ObjectToSql.Helper.SqlSyntaxHelper
  commentId: T:DotNetHelper.ObjectToSql.Helper.SqlSyntaxHelper
  parent: DotNetHelper.ObjectToSql.Helper
  name: SqlSyntaxHelper
  nameWithType: SqlSyntaxHelper
  fullName: DotNetHelper.ObjectToSql.Helper.SqlSyntaxHelper
- uid: DotNetHelper.ObjectToSql.Helper
  commentId: N:DotNetHelper.ObjectToSql.Helper
  name: DotNetHelper.ObjectToSql.Helper
  nameWithType: DotNetHelper.ObjectToSql.Helper
  fullName: DotNetHelper.ObjectToSql.Helper
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.AlwaysCreateParamaterizedSql*
  commentId: Overload:DotNetHelper.ObjectToSql.Services.DataTableToSql.AlwaysCreateParamaterizedSql
  name: AlwaysCreateParamaterizedSql
  nameWithType: DataTableToSql.AlwaysCreateParamaterizedSql
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.AlwaysCreateParamaterizedSql
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.#ctor*
  commentId: Overload:DotNetHelper.ObjectToSql.Services.DataTableToSql.#ctor
  name: DataTableToSql
  nameWithType: DataTableToSql.DataTableToSql
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.DataTableToSql
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery*
  commentId: Overload:DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery
  name: BuildQuery
  nameWithType: DataTableToSql.BuildQuery
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQuery
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: DotNetHelper.ObjectToSql.Enum.ActionType
  commentId: T:DotNetHelper.ObjectToSql.Enum.ActionType
  parent: DotNetHelper.ObjectToSql.Enum
  name: ActionType
  nameWithType: ActionType
  fullName: DotNetHelper.ObjectToSql.Enum.ActionType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState*
  commentId: Overload:DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState
  name: BuildQueryFromRowState
  nameWithType: DataTableToSql.BuildQueryFromRowState
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildQueryFromRowState
- uid: System.Data.DataRow
  commentId: T:System.Data.DataRow
  parent: System.Data
  isExternal: true
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildDbParameterList*
  commentId: Overload:DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildDbParameterList
  name: BuildDbParameterList
  nameWithType: DataTableToSql.BuildDbParameterList
  fullName: DotNetHelper.ObjectToSql.Services.DataTableToSql.BuildDbParameterList
- uid: System.Func{System.String,System.Object,{T}}
  commentId: T:System.Func{System.String,System.Object,``0}
  parent: System
  definition: System.Func`3
  name: Func<String, Object, T>
  nameWithType: Func<String, Object, T>
  fullName: System.Func<System.String, System.Object, T>
  nameWithType.vb: Func(Of String, Object, T)
  fullName.vb: System.Func(Of System.String, System.Object, T)
  name.vb: Func(Of String, Object, T)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

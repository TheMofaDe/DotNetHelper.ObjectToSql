### YamlMime:ManagedReference
items:
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  commentId: T:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  id: ObjectToSqlHelper
  parent: DotNetHelper.ObjectToSql.Helper
  children:
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.#ctor
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildDbParameterList``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,System.Boolean)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClause(System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper})
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper},System.Boolean)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.ConvertToDatabaseValue(DotNetHelper.FastMember.Extension.Models.MemberWrapper,System.Object,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(System.Type,System.Boolean)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields``1(``0)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields``1(System.Boolean)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields(System.Type,System.Boolean)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields``1(``0)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields``1(System.Boolean)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields(System.Type,System.Boolean)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields``1(``0)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields``1(System.Boolean)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields``1(``0)
  - DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields``1(System.Boolean)
  langs:
  - csharp
  - vb
  name: ObjectToSqlHelper
  nameWithType: ObjectToSqlHelper
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  type: Class
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: ObjectToSqlHelper
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 15
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  syntax:
    content: public class ObjectToSqlHelper
    content.vb: Public Class ObjectToSqlHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.#ctor
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.#ctor
  id: '#ctor'
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: ObjectToSqlHelper()
  nameWithType: ObjectToSqlHelper.ObjectToSqlHelper()
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.ObjectToSqlHelper()
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: .ctor
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 18
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  syntax:
    content: public ObjectToSqlHelper()
    content.vb: Public Sub New
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClause(System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper})
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClause(System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper})
  id: BuildWhereClause(System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper})
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildWhereClause(StringBuilder, List<MemberWrapper>)
  nameWithType: ObjectToSqlHelper.BuildWhereClause(StringBuilder, List<MemberWrapper>)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClause(System.Text.StringBuilder, System.Collections.Generic.List<DotNetHelper.FastMember.Extension.Models.MemberWrapper>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: BuildWhereClause
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 30
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nBuilds the where clause.\n"
  example: []
  syntax:
    content: public static void BuildWhereClause(StringBuilder sqlBuilder, List<MemberWrapper> keyFields)
    parameters:
    - id: sqlBuilder
      type: System.Text.StringBuilder
      description: The SQL builder.
    - id: keyFields
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: The key fields.
    content.vb: Public Shared Sub BuildWhereClause(sqlBuilder As StringBuilder, keyFields As List(Of MemberWrapper))
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClause*
  nameWithType.vb: ObjectToSqlHelper.BuildWhereClause(StringBuilder, List(Of MemberWrapper))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClause(System.Text.StringBuilder, System.Collections.Generic.List(Of DotNetHelper.FastMember.Extension.Models.MemberWrapper))
  name.vb: BuildWhereClause(StringBuilder, List(Of MemberWrapper))
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper},System.Boolean)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper},System.Boolean)
  id: BuildWhereClauseAndGetDbParameters``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper},System.Boolean)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildWhereClauseAndGetDbParameters<T>(T, Func<String, Object, DbParameter>, StringBuilder, List<MemberWrapper>, Boolean)
  nameWithType: ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters<T>(T, Func<String, Object, DbParameter>, StringBuilder, List<MemberWrapper>, Boolean)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters<T>(T, System.Func<System.String, System.Object, System.Data.Common.DbParameter>, System.Text.StringBuilder, System.Collections.Generic.List<DotNetHelper.FastMember.Extension.Models.MemberWrapper>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: BuildWhereClauseAndGetDbParameters
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 56
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nBuilds the where clause.Dyn\n"
  example: []
  syntax:
    content: >-
      public List<DbParameter> BuildWhereClauseAndGetDbParameters<T>(T obj, Func<string, object, DbParameter> GetNewParameter, StringBuilder sqlBuilder, List<MemberWrapper> keyFields, bool throwOnNoAttributes)
          where T : class
    parameters:
    - id: obj
      type: '{T}'
    - id: GetNewParameter
      type: System.Func{System.String,System.Object,System.Data.Common.DbParameter}
    - id: sqlBuilder
      type: System.Text.StringBuilder
      description: The SQL builder.
    - id: keyFields
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: The key fields.
    - id: throwOnNoAttributes
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{System.Data.Common.DbParameter}
    content.vb: Public Function BuildWhereClauseAndGetDbParameters(Of T As Class)(obj As T, GetNewParameter As Func(Of String, Object, DbParameter), sqlBuilder As StringBuilder, keyFields As List(Of MemberWrapper), throwOnNoAttributes As Boolean) As List(Of DbParameter)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters*
  nameWithType.vb: ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters(Of T)(T, Func(Of String, Object, DbParameter), StringBuilder, List(Of MemberWrapper), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters(Of T)(T, System.Func(Of System.String, System.Object, System.Data.Common.DbParameter), System.Text.StringBuilder, System.Collections.Generic.List(Of DotNetHelper.FastMember.Extension.Models.MemberWrapper), System.Boolean)
  name.vb: BuildWhereClauseAndGetDbParameters(Of T)(T, Func(Of String, Object, DbParameter), StringBuilder, List(Of MemberWrapper), Boolean)
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields``1(System.Boolean)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields``1(System.Boolean)
  id: GetNonKeyFields``1(System.Boolean)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetNonKeyFields<T>(Boolean)
  nameWithType: ObjectToSqlHelper.GetNonKeyFields<T>(Boolean)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields<T>(System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetNonKeyFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 85
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets the non key fields.\n"
  example: []
  syntax:
    content: >-
      public List<MemberWrapper> GetNonKeyFields<T>(bool includeNonPublicAccessor)
          where T : class
    parameters:
    - id: includeNonPublicAccessor
      type: System.Boolean
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Function GetNonKeyFields(Of T As Class)(includeNonPublicAccessor As Boolean) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields*
  nameWithType.vb: ObjectToSqlHelper.GetNonKeyFields(Of T)(Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields(Of T)(System.Boolean)
  name.vb: GetNonKeyFields(Of T)(Boolean)
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields``1(``0)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields``1(``0)
  id: GetNonKeyFields``1(``0)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetNonKeyFields<T>(T)
  nameWithType: ObjectToSqlHelper.GetNonKeyFields<T>(T)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields<T>(T)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetNonKeyFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 95
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets the non key fields.\n"
  example: []
  syntax:
    content: >-
      public List<MemberWrapper> GetNonKeyFields<T>(T dynamicObject)
          where T : IDynamicMetaObjectProvider
    parameters:
    - id: dynamicObject
      type: '{T}'
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Function GetNonKeyFields(Of T As IDynamicMetaObjectProvider)(dynamicObject As T) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields*
  nameWithType.vb: ObjectToSqlHelper.GetNonKeyFields(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields(Of T)(T)
  name.vb: GetNonKeyFields(Of T)(T)
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields``1(System.Boolean)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields``1(System.Boolean)
  id: GetKeyFields``1(System.Boolean)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetKeyFields<T>(Boolean)
  nameWithType: ObjectToSqlHelper.GetKeyFields<T>(Boolean)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields<T>(System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetKeyFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 107
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets the key fields.\n"
  example: []
  syntax:
    content: >-
      public static List<MemberWrapper> GetKeyFields<T>(bool includeNonPublicAccessor)
          where T : class
    parameters:
    - id: includeNonPublicAccessor
      type: System.Boolean
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Shared Function GetKeyFields(Of T As Class)(includeNonPublicAccessor As Boolean) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields*
  nameWithType.vb: ObjectToSqlHelper.GetKeyFields(Of T)(Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields(Of T)(System.Boolean)
  name.vb: GetKeyFields(Of T)(Boolean)
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields``1(``0)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields``1(``0)
  id: GetKeyFields``1(``0)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetKeyFields<T>(T)
  nameWithType: ObjectToSqlHelper.GetKeyFields<T>(T)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields<T>(T)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetKeyFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 118
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets the key fields.\n"
  example: []
  syntax:
    content: >-
      public static List<MemberWrapper> GetKeyFields<T>(T dynamicObject)
          where T : IDynamicMetaObjectProvider
    parameters:
    - id: dynamicObject
      type: '{T}'
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Shared Function GetKeyFields(Of T As IDynamicMetaObjectProvider)(dynamicObject As T) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields*
  nameWithType.vb: ObjectToSqlHelper.GetKeyFields(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields(Of T)(T)
  name.vb: GetKeyFields(Of T)(T)
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields(System.Type,System.Boolean)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields(System.Type,System.Boolean)
  id: GetKeyFields(System.Type,System.Boolean)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetKeyFields(Type, Boolean)
  nameWithType: ObjectToSqlHelper.GetKeyFields(Type, Boolean)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields(System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetKeyFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 130
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets the key fields.\n"
  example: []
  syntax:
    content: public List<MemberWrapper> GetKeyFields(Type type, bool includeNonPublicAccessor)
    parameters:
    - id: type
      type: System.Type
    - id: includeNonPublicAccessor
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Function GetKeyFields(type As Type, includeNonPublicAccessor As Boolean) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields``1(System.Boolean)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields``1(System.Boolean)
  id: GetNonIdentityFields``1(System.Boolean)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetNonIdentityFields<T>(Boolean)
  nameWithType: ObjectToSqlHelper.GetNonIdentityFields<T>(Boolean)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields<T>(System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetNonIdentityFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 143
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets the non identity fields.\n"
  example: []
  syntax:
    content: >-
      public static List<MemberWrapper> GetNonIdentityFields<T>(bool includeNonPublicAccessor)
          where T : class
    parameters:
    - id: includeNonPublicAccessor
      type: System.Boolean
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Shared Function GetNonIdentityFields(Of T As Class)(includeNonPublicAccessor As Boolean) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields*
  nameWithType.vb: ObjectToSqlHelper.GetNonIdentityFields(Of T)(Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields(Of T)(System.Boolean)
  name.vb: GetNonIdentityFields(Of T)(Boolean)
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields``1(``0)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields``1(``0)
  id: GetNonIdentityFields``1(``0)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetNonIdentityFields<T>(T)
  nameWithType: ObjectToSqlHelper.GetNonIdentityFields<T>(T)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields<T>(T)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetNonIdentityFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 153
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets the non identity fields.\n"
  example: []
  syntax:
    content: >-
      public static List<MemberWrapper> GetNonIdentityFields<T>(T dynamicObject)
          where T : IDynamicMetaObjectProvider
    parameters:
    - id: dynamicObject
      type: '{T}'
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Shared Function GetNonIdentityFields(Of T As IDynamicMetaObjectProvider)(dynamicObject As T) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields*
  nameWithType.vb: ObjectToSqlHelper.GetNonIdentityFields(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields(Of T)(T)
  name.vb: GetNonIdentityFields(Of T)(T)
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields(System.Type,System.Boolean)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields(System.Type,System.Boolean)
  id: GetNonIdentityFields(System.Type,System.Boolean)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetNonIdentityFields(Type, Boolean)
  nameWithType: ObjectToSqlHelper.GetNonIdentityFields(Type, Boolean)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields(System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetNonIdentityFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 163
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets the non identity fields.\n"
  example: []
  syntax:
    content: public static List<MemberWrapper> GetNonIdentityFields(Type type, bool includeNonPublicAccessor)
    parameters:
    - id: type
      type: System.Type
    - id: includeNonPublicAccessor
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Shared Function GetNonIdentityFields(type As Type, includeNonPublicAccessor As Boolean) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields``1(System.Boolean)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields``1(System.Boolean)
  id: GetAllNonIgnoreFields``1(System.Boolean)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetAllNonIgnoreFields<T>(Boolean)
  nameWithType: ObjectToSqlHelper.GetAllNonIgnoreFields<T>(Boolean)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields<T>(System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetAllNonIgnoreFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 175
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets all non ignore fields.\n"
  example: []
  syntax:
    content: >-
      public List<MemberWrapper> GetAllNonIgnoreFields<T>(bool includeNonPublicAccessor)
          where T : class
    parameters:
    - id: includeNonPublicAccessor
      type: System.Boolean
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Function GetAllNonIgnoreFields(Of T As Class)(includeNonPublicAccessor As Boolean) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields*
  nameWithType.vb: ObjectToSqlHelper.GetAllNonIgnoreFields(Of T)(Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(Of T)(System.Boolean)
  name.vb: GetAllNonIgnoreFields(Of T)(Boolean)
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields``1(``0)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields``1(``0)
  id: GetAllNonIgnoreFields``1(``0)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetAllNonIgnoreFields<T>(T)
  nameWithType: ObjectToSqlHelper.GetAllNonIgnoreFields<T>(T)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields<T>(T)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetAllNonIgnoreFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 186
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets all non ignore fields.\n"
  example: []
  syntax:
    content: >-
      public List<MemberWrapper> GetAllNonIgnoreFields<T>(T dynamicObject)
          where T : IDynamicMetaObjectProvider
    parameters:
    - id: dynamicObject
      type: '{T}'
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Function GetAllNonIgnoreFields(Of T As IDynamicMetaObjectProvider)(dynamicObject As T) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields*
  nameWithType.vb: ObjectToSqlHelper.GetAllNonIgnoreFields(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(Of T)(T)
  name.vb: GetAllNonIgnoreFields(Of T)(T)
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(System.Type,System.Boolean)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(System.Type,System.Boolean)
  id: GetAllNonIgnoreFields(System.Type,System.Boolean)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetAllNonIgnoreFields(Type, Boolean)
  nameWithType: ObjectToSqlHelper.GetAllNonIgnoreFields(Type, Boolean)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: GetAllNonIgnoreFields
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 199
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nGets all non ignore fields.\n"
  example: []
  syntax:
    content: public List<MemberWrapper> GetAllNonIgnoreFields(Type type, bool includeNonPublicAccessor)
    parameters:
    - id: type
      type: System.Type
    - id: includeNonPublicAccessor
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
      description: List&lt;MemberWrapper>.
    content.vb: Public Function GetAllNonIgnoreFields(type As Type, includeNonPublicAccessor As Boolean) As List(Of MemberWrapper)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.ConvertToDatabaseValue(DotNetHelper.FastMember.Extension.Models.MemberWrapper,System.Object,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.ConvertToDatabaseValue(DotNetHelper.FastMember.Extension.Models.MemberWrapper,System.Object,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer)
  id: ConvertToDatabaseValue(DotNetHelper.FastMember.Extension.Models.MemberWrapper,System.Object,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: ConvertToDatabaseValue(MemberWrapper, Object, ISerializer, ISerializer, ISerializer)
  nameWithType: ObjectToSqlHelper.ConvertToDatabaseValue(MemberWrapper, Object, ISerializer, ISerializer, ISerializer)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.ConvertToDatabaseValue(DotNetHelper.FastMember.Extension.Models.MemberWrapper, System.Object, DotNetHelper.Serialization.Abstractions.Interface.ISerializer, DotNetHelper.Serialization.Abstractions.Interface.ISerializer, DotNetHelper.Serialization.Abstractions.Interface.ISerializer)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: ConvertToDatabaseValue
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 217
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nConverts to database value.\n"
  example: []
  syntax:
    content: public static object ConvertToDatabaseValue(MemberWrapper member, object value, ISerializer XmlSerializer, ISerializer JsonSerializer, ISerializer CsvSerializer)
    parameters:
    - id: member
      type: DotNetHelper.FastMember.Extension.Models.MemberWrapper
      description: The member.
    - id: value
      type: System.Object
      description: The value.
    - id: XmlSerializer
      type: DotNetHelper.Serialization.Abstractions.Interface.ISerializer
    - id: JsonSerializer
      type: DotNetHelper.Serialization.Abstractions.Interface.ISerializer
    - id: CsvSerializer
      type: DotNetHelper.Serialization.Abstractions.Interface.ISerializer
    return:
      type: System.Object
      description: System.Object.
    content.vb: Public Shared Function ConvertToDatabaseValue(member As MemberWrapper, value As Object, XmlSerializer As ISerializer, JsonSerializer As ISerializer, CsvSerializer As ISerializer) As Object
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.ConvertToDatabaseValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildDbParameterList``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,System.Boolean)
  commentId: M:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildDbParameterList``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,System.Boolean)
  id: BuildDbParameterList``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,DotNetHelper.Serialization.Abstractions.Interface.ISerializer,System.Boolean)
  parent: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildDbParameterList<T>(T, Func<String, Object, DbParameter>, ISerializer, ISerializer, ISerializer, Boolean)
  nameWithType: ObjectToSqlHelper.BuildDbParameterList<T>(T, Func<String, Object, DbParameter>, ISerializer, ISerializer, ISerializer, Boolean)
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildDbParameterList<T>(T, System.Func<System.String, System.Object, System.Data.Common.DbParameter>, DotNetHelper.Serialization.Abstractions.Interface.ISerializer, DotNetHelper.Serialization.Abstractions.Interface.ISerializer, DotNetHelper.Serialization.Abstractions.Interface.ISerializer, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql.git
    id: BuildDbParameterList
    path: ../src/DotNetHelper.ObjectToSql/Helper/ObjectToSqlHelper.cs
    startLine: 258
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  summary: "\nBuilds the SQL parameter list.\n"
  example: []
  syntax:
    content: >-
      public List<DbParameter> BuildDbParameterList<T>(T poco, Func<string, object, DbParameter> GetNewParameter, ISerializer XmlSerializer, ISerializer JsonSerializer, ISerializer CsvSerializer, bool includeNonPublicAccessor)
          where T : class
    parameters:
    - id: poco
      type: '{T}'
      description: The poco.
    - id: GetNewParameter
      type: System.Func{System.String,System.Object,System.Data.Common.DbParameter}
    - id: XmlSerializer
      type: DotNetHelper.Serialization.Abstractions.Interface.ISerializer
    - id: JsonSerializer
      type: DotNetHelper.Serialization.Abstractions.Interface.ISerializer
    - id: CsvSerializer
      type: DotNetHelper.Serialization.Abstractions.Interface.ISerializer
    - id: includeNonPublicAccessor
      type: System.Boolean
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{System.Data.Common.DbParameter}
      description: List&lt;DbParameter>.
    content.vb: Public Function BuildDbParameterList(Of T As Class)(poco As T, GetNewParameter As Func(Of String, Object, DbParameter), XmlSerializer As ISerializer, JsonSerializer As ISerializer, CsvSerializer As ISerializer, includeNonPublicAccessor As Boolean) As List(Of DbParameter)
  overload: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildDbParameterList*
  nameWithType.vb: ObjectToSqlHelper.BuildDbParameterList(Of T)(T, Func(Of String, Object, DbParameter), ISerializer, ISerializer, ISerializer, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildDbParameterList(Of T)(T, System.Func(Of System.String, System.Object, System.Data.Common.DbParameter), DotNetHelper.Serialization.Abstractions.Interface.ISerializer, DotNetHelper.Serialization.Abstractions.Interface.ISerializer, DotNetHelper.Serialization.Abstractions.Interface.ISerializer, System.Boolean)
  name.vb: BuildDbParameterList(Of T)(T, Func(Of String, Object, DbParameter), ISerializer, ISerializer, ISerializer, Boolean)
references:
- uid: DotNetHelper.ObjectToSql.Helper
  commentId: N:DotNetHelper.ObjectToSql.Helper
  name: DotNetHelper.ObjectToSql.Helper
  nameWithType: DotNetHelper.ObjectToSql.Helper
  fullName: DotNetHelper.ObjectToSql.Helper
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.#ctor*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.#ctor
  name: ObjectToSqlHelper
  nameWithType: ObjectToSqlHelper.ObjectToSqlHelper
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.ObjectToSqlHelper
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClause*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClause
  name: BuildWhereClause
  nameWithType: ObjectToSqlHelper.BuildWhereClause
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClause
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
  commentId: T:System.Collections.Generic.List{DotNetHelper.FastMember.Extension.Models.MemberWrapper}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MemberWrapper>
  nameWithType: List<MemberWrapper>
  fullName: System.Collections.Generic.List<DotNetHelper.FastMember.Extension.Models.MemberWrapper>
  nameWithType.vb: List(Of MemberWrapper)
  fullName.vb: System.Collections.Generic.List(Of DotNetHelper.FastMember.Extension.Models.MemberWrapper)
  name.vb: List(Of MemberWrapper)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper.FastMember.Extension.Models.MemberWrapper
    name: MemberWrapper
    nameWithType: MemberWrapper
    fullName: DotNetHelper.FastMember.Extension.Models.MemberWrapper
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper.FastMember.Extension.Models.MemberWrapper
    name: MemberWrapper
    nameWithType: MemberWrapper
    fullName: DotNetHelper.FastMember.Extension.Models.MemberWrapper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters
  name: BuildWhereClauseAndGetDbParameters
  nameWithType: ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildWhereClauseAndGetDbParameters
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{System.String,System.Object,System.Data.Common.DbParameter}
  commentId: T:System.Func{System.String,System.Object,System.Data.Common.DbParameter}
  parent: System
  definition: System.Func`3
  name: Func<String, Object, DbParameter>
  nameWithType: Func<String, Object, DbParameter>
  fullName: System.Func<System.String, System.Object, System.Data.Common.DbParameter>
  nameWithType.vb: Func(Of String, Object, DbParameter)
  fullName.vb: System.Func(Of System.String, System.Object, System.Data.Common.DbParameter)
  name.vb: Func(Of String, Object, DbParameter)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    nameWithType: DbParameter
    fullName: System.Data.Common.DbParameter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    nameWithType: DbParameter
    fullName: System.Data.Common.DbParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List{System.Data.Common.DbParameter}
  commentId: T:System.Collections.Generic.List{System.Data.Common.DbParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DbParameter>
  nameWithType: List<DbParameter>
  fullName: System.Collections.Generic.List<System.Data.Common.DbParameter>
  nameWithType.vb: List(Of DbParameter)
  fullName.vb: System.Collections.Generic.List(Of System.Data.Common.DbParameter)
  name.vb: List(Of DbParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    nameWithType: DbParameter
    fullName: System.Data.Common.DbParameter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    nameWithType: DbParameter
    fullName: System.Data.Common.DbParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields
  name: GetNonKeyFields
  nameWithType: ObjectToSqlHelper.GetNonKeyFields
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonKeyFields
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields
  name: GetKeyFields
  nameWithType: ObjectToSqlHelper.GetKeyFields
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetKeyFields
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields
  name: GetNonIdentityFields
  nameWithType: ObjectToSqlHelper.GetNonIdentityFields
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetNonIdentityFields
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields
  name: GetAllNonIgnoreFields
  nameWithType: ObjectToSqlHelper.GetAllNonIgnoreFields
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.ConvertToDatabaseValue*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.ConvertToDatabaseValue
  name: ConvertToDatabaseValue
  nameWithType: ObjectToSqlHelper.ConvertToDatabaseValue
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.ConvertToDatabaseValue
- uid: DotNetHelper.FastMember.Extension.Models.MemberWrapper
  commentId: T:DotNetHelper.FastMember.Extension.Models.MemberWrapper
  parent: DotNetHelper.FastMember.Extension.Models
  isExternal: true
  name: MemberWrapper
  nameWithType: MemberWrapper
  fullName: DotNetHelper.FastMember.Extension.Models.MemberWrapper
- uid: DotNetHelper.Serialization.Abstractions.Interface.ISerializer
  commentId: T:DotNetHelper.Serialization.Abstractions.Interface.ISerializer
  parent: DotNetHelper.Serialization.Abstractions.Interface
  isExternal: true
  name: ISerializer
  nameWithType: ISerializer
  fullName: DotNetHelper.Serialization.Abstractions.Interface.ISerializer
- uid: DotNetHelper.FastMember.Extension.Models
  commentId: N:DotNetHelper.FastMember.Extension.Models
  isExternal: true
  name: DotNetHelper.FastMember.Extension.Models
  nameWithType: DotNetHelper.FastMember.Extension.Models
  fullName: DotNetHelper.FastMember.Extension.Models
- uid: DotNetHelper.Serialization.Abstractions.Interface
  commentId: N:DotNetHelper.Serialization.Abstractions.Interface
  isExternal: true
  name: DotNetHelper.Serialization.Abstractions.Interface
  nameWithType: DotNetHelper.Serialization.Abstractions.Interface
  fullName: DotNetHelper.Serialization.Abstractions.Interface
- uid: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildDbParameterList*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildDbParameterList
  name: BuildDbParameterList
  nameWithType: ObjectToSqlHelper.BuildDbParameterList
  fullName: DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.BuildDbParameterList

### YamlMime:ManagedReference
items:
- uid: DotNetHelper.ObjectToSql.Helper.DbTypeMap
  commentId: T:DotNetHelper.ObjectToSql.Helper.DbTypeMap
  id: DbTypeMap
  parent: DotNetHelper.ObjectToSql.Helper
  children:
  - DotNetHelper.ObjectToSql.Helper.DbTypeMap.#ctor(DotNetHelper.ObjectToSql.Enum.DataBaseType)
  - DotNetHelper.ObjectToSql.Helper.DbTypeMap.TypeToSqlTypeMap
  langs:
  - csharp
  - vb
  name: DbTypeMap
  nameWithType: DbTypeMap
  fullName: DotNetHelper.ObjectToSql.Helper.DbTypeMap
  type: Class
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/DBTypeMap.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: DbTypeMap
    path: ../src/DotNetHelper.ObjectToSql/Helper/DBTypeMap.cs
    startLine: 7
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  syntax:
    content: public class DbTypeMap
    content.vb: Public Class DbTypeMap
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotNetHelper.ObjectToSql.Helper.DbTypeMap.TypeToSqlTypeMap
  commentId: P:DotNetHelper.ObjectToSql.Helper.DbTypeMap.TypeToSqlTypeMap
  id: TypeToSqlTypeMap
  parent: DotNetHelper.ObjectToSql.Helper.DbTypeMap
  langs:
  - csharp
  - vb
  name: TypeToSqlTypeMap
  nameWithType: DbTypeMap.TypeToSqlTypeMap
  fullName: DotNetHelper.ObjectToSql.Helper.DbTypeMap.TypeToSqlTypeMap
  type: Property
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/DBTypeMap.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: TypeToSqlTypeMap
    path: ../src/DotNetHelper.ObjectToSql/Helper/DBTypeMap.cs
    startLine: 9
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  syntax:
    content: public Dictionary<Type, DbType> TypeToSqlTypeMap { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Type,System.Data.DbType}
    content.vb: Public ReadOnly Property TypeToSqlTypeMap As Dictionary(Of Type, DbType)
  overload: DotNetHelper.ObjectToSql.Helper.DbTypeMap.TypeToSqlTypeMap*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper.ObjectToSql.Helper.DbTypeMap.#ctor(DotNetHelper.ObjectToSql.Enum.DataBaseType)
  commentId: M:DotNetHelper.ObjectToSql.Helper.DbTypeMap.#ctor(DotNetHelper.ObjectToSql.Enum.DataBaseType)
  id: '#ctor(DotNetHelper.ObjectToSql.Enum.DataBaseType)'
  parent: DotNetHelper.ObjectToSql.Helper.DbTypeMap
  langs:
  - csharp
  - vb
  name: DbTypeMap(DataBaseType)
  nameWithType: DbTypeMap.DbTypeMap(DataBaseType)
  fullName: DotNetHelper.ObjectToSql.Helper.DbTypeMap.DbTypeMap(DotNetHelper.ObjectToSql.Enum.DataBaseType)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper.ObjectToSql/Helper/DBTypeMap.cs
      branch: feature/build
      repo: https://github.com/TheMofaDe/DotNetHelper.ObjectToSql
    id: .ctor
    path: ../src/DotNetHelper.ObjectToSql/Helper/DBTypeMap.cs
    startLine: 10
  assemblies:
  - DotNetHelper.ObjectToSql
  namespace: DotNetHelper.ObjectToSql.Helper
  syntax:
    content: public DbTypeMap(DataBaseType dataBaseType)
    parameters:
    - id: dataBaseType
      type: DotNetHelper.ObjectToSql.Enum.DataBaseType
    content.vb: Public Sub New(dataBaseType As DataBaseType)
  overload: DotNetHelper.ObjectToSql.Helper.DbTypeMap.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DotNetHelper.ObjectToSql.Helper
  commentId: N:DotNetHelper.ObjectToSql.Helper
  name: DotNetHelper.ObjectToSql.Helper
  nameWithType: DotNetHelper.ObjectToSql.Helper
  fullName: DotNetHelper.ObjectToSql.Helper
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper.ObjectToSql.Helper.DbTypeMap.TypeToSqlTypeMap*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.DbTypeMap.TypeToSqlTypeMap
  name: TypeToSqlTypeMap
  nameWithType: DbTypeMap.TypeToSqlTypeMap
  fullName: DotNetHelper.ObjectToSql.Helper.DbTypeMap.TypeToSqlTypeMap
- uid: System.Collections.Generic.Dictionary{System.Type,System.Data.DbType}
  commentId: T:System.Collections.Generic.Dictionary{System.Type,System.Data.DbType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Type, DbType>
  nameWithType: Dictionary<Type, DbType>
  fullName: System.Collections.Generic.Dictionary<System.Type, System.Data.DbType>
  nameWithType.vb: Dictionary(Of Type, DbType)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, System.Data.DbType)
  name.vb: Dictionary(Of Type, DbType)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.DbType
    name: DbType
    nameWithType: DbType
    fullName: System.Data.DbType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.DbType
    name: DbType
    nameWithType: DbType
    fullName: System.Data.DbType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DotNetHelper.ObjectToSql.Helper.DbTypeMap.#ctor*
  commentId: Overload:DotNetHelper.ObjectToSql.Helper.DbTypeMap.#ctor
  name: DbTypeMap
  nameWithType: DbTypeMap.DbTypeMap
  fullName: DotNetHelper.ObjectToSql.Helper.DbTypeMap.DbTypeMap
- uid: DotNetHelper.ObjectToSql.Enum.DataBaseType
  commentId: T:DotNetHelper.ObjectToSql.Enum.DataBaseType
  parent: DotNetHelper.ObjectToSql.Enum
  name: DataBaseType
  nameWithType: DataBaseType
  fullName: DotNetHelper.ObjectToSql.Enum.DataBaseType
- uid: DotNetHelper.ObjectToSql.Enum
  commentId: N:DotNetHelper.ObjectToSql.Enum
  name: DotNetHelper.ObjectToSql.Enum
  nameWithType: DotNetHelper.ObjectToSql.Enum
  fullName: DotNetHelper.ObjectToSql.Enum

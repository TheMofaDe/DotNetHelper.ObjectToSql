{
  "api/DotNetHelper.ObjectToSql.Exceptions.MissingKeyAttributeException.html": {
    "href": "api/DotNetHelper.ObjectToSql.Exceptions.MissingKeyAttributeException.html",
    "title": "Class MissingKeyAttributeException | DotNetHelper.ObjectToSql",
    "keywords": "Class MissingKeyAttributeException Custom Exception that lets the user know a code change is required to fix this error Inheritance Object Exception MissingKeyAttributeException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Exceptions Assembly : DotNetHelper.ObjectToSql.dll Syntax [Serializable] public class MissingKeyAttributeException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source MissingKeyAttributeException() Just create the exception Declaration public MissingKeyAttributeException() | Improve this Doc View Source MissingKeyAttributeException(SerializationInfo, StreamingContext) Create the exception from serialized data. Usual scenario is when exception is occured somewhere on the remote workstation and we have to re-create/re-throw the exception on the local machine Declaration protected MissingKeyAttributeException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info Serialization info StreamingContext context Serialization context | Improve this Doc View Source MissingKeyAttributeException(String) Create the exception with description Declaration public MissingKeyAttributeException(string message) Parameters Type Name Description String message Exception description | Improve this Doc View Source MissingKeyAttributeException(String, Exception) Create the exception with description and inner cause Declaration public MissingKeyAttributeException(string message, Exception innerException) Parameters Type Name Description String message Exception description Exception innerException Exception inner cause Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.html": {
    "href": "api/DotNetHelper.ObjectToSql.Helper.ObjectToSqlHelper.html",
    "title": "Class ObjectToSqlHelper | DotNetHelper.ObjectToSql",
    "keywords": "Class ObjectToSqlHelper Inheritance Object ObjectToSqlHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Helper Assembly : DotNetHelper.ObjectToSql.dll Syntax public class ObjectToSqlHelper Constructors | Improve this Doc View Source ObjectToSqlHelper() Declaration public ObjectToSqlHelper() Methods | Improve this Doc View Source BuildDbParameterList<T>(T, Func<String, Object, DbParameter>, ISerializer, ISerializer, ISerializer, Boolean) Builds the SQL parameter list. Declaration public List<DbParameter> BuildDbParameterList<T>(T poco, Func<string, object, DbParameter> GetNewParameter, ISerializer XmlSerializer, ISerializer JsonSerializer, ISerializer CsvSerializer, bool includeNonPublicAccessor) where T : class Parameters Type Name Description T poco The poco. Func < String , Object , DbParameter > GetNewParameter DotNetHelper.Serialization.Abstractions.Interface.ISerializer XmlSerializer DotNetHelper.Serialization.Abstractions.Interface.ISerializer JsonSerializer DotNetHelper.Serialization.Abstractions.Interface.ISerializer CsvSerializer Boolean includeNonPublicAccessor Returns Type Description List < DbParameter > List<DbParameter>. Type Parameters Name Description T | Improve this Doc View Source BuildWhereClause(StringBuilder, List<MemberWrapper>) Builds the where clause. Declaration public static void BuildWhereClause(StringBuilder sqlBuilder, List<MemberWrapper> keyFields) Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > keyFields The key fields. | Improve this Doc View Source BuildWhereClauseAndGetDbParameters<T>(T, Func<String, Object, DbParameter>, StringBuilder, List<MemberWrapper>, Boolean) Builds the where clause.Dyn Declaration public List<DbParameter> BuildWhereClauseAndGetDbParameters<T>(T obj, Func<string, object, DbParameter> GetNewParameter, StringBuilder sqlBuilder, List<MemberWrapper> keyFields, bool throwOnNoAttributes) where T : class Parameters Type Name Description T obj Func < String , Object , DbParameter > GetNewParameter StringBuilder sqlBuilder The SQL builder. List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > keyFields The key fields. Boolean throwOnNoAttributes Returns Type Description List < DbParameter > Type Parameters Name Description T | Improve this Doc View Source ConvertToDatabaseValue(MemberWrapper, Object, ISerializer, ISerializer, ISerializer) Converts to database value. Declaration public static object ConvertToDatabaseValue(MemberWrapper member, object value, ISerializer XmlSerializer, ISerializer JsonSerializer, ISerializer CsvSerializer) Parameters Type Name Description DotNetHelper.FastMember.Extension.Models.MemberWrapper member The member. Object value The value. DotNetHelper.Serialization.Abstractions.Interface.ISerializer XmlSerializer DotNetHelper.Serialization.Abstractions.Interface.ISerializer JsonSerializer DotNetHelper.Serialization.Abstractions.Interface.ISerializer CsvSerializer Returns Type Description Object System.Object. | Improve this Doc View Source GetAllNonIgnoreFields(Type, Boolean) Gets all non ignore fields. Declaration public List<MemberWrapper> GetAllNonIgnoreFields(Type type, bool includeNonPublicAccessor) Parameters Type Name Description Type type Boolean includeNonPublicAccessor Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. | Improve this Doc View Source GetAllNonIgnoreFields<T>(T) Gets all non ignore fields. Declaration public List<MemberWrapper> GetAllNonIgnoreFields<T>(T dynamicObject) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. Type Parameters Name Description T | Improve this Doc View Source GetAllNonIgnoreFields<T>(Boolean) Gets all non ignore fields. Declaration public List<MemberWrapper> GetAllNonIgnoreFields<T>(bool includeNonPublicAccessor) where T : class Parameters Type Name Description Boolean includeNonPublicAccessor Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. Type Parameters Name Description T | Improve this Doc View Source GetKeyFields(Type, Boolean) Gets the key fields. Declaration public List<MemberWrapper> GetKeyFields(Type type, bool includeNonPublicAccessor) Parameters Type Name Description Type type Boolean includeNonPublicAccessor Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. | Improve this Doc View Source GetKeyFields<T>(T) Gets the key fields. Declaration public static List<MemberWrapper> GetKeyFields<T>(T dynamicObject) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. Type Parameters Name Description T | Improve this Doc View Source GetKeyFields<T>(Boolean) Gets the key fields. Declaration public static List<MemberWrapper> GetKeyFields<T>(bool includeNonPublicAccessor) where T : class Parameters Type Name Description Boolean includeNonPublicAccessor Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. Type Parameters Name Description T | Improve this Doc View Source GetNonIdentityFields(Type, Boolean) Gets the non identity fields. Declaration public static List<MemberWrapper> GetNonIdentityFields(Type type, bool includeNonPublicAccessor) Parameters Type Name Description Type type Boolean includeNonPublicAccessor Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. | Improve this Doc View Source GetNonIdentityFields<T>(T) Gets the non identity fields. Declaration public static List<MemberWrapper> GetNonIdentityFields<T>(T dynamicObject) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. Type Parameters Name Description T | Improve this Doc View Source GetNonIdentityFields<T>(Boolean) Gets the non identity fields. Declaration public static List<MemberWrapper> GetNonIdentityFields<T>(bool includeNonPublicAccessor) where T : class Parameters Type Name Description Boolean includeNonPublicAccessor Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. Type Parameters Name Description T | Improve this Doc View Source GetNonKeyFields<T>(T) Gets the non key fields. Declaration public List<MemberWrapper> GetNonKeyFields<T>(T dynamicObject) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. Type Parameters Name Description T | Improve this Doc View Source GetNonKeyFields<T>(Boolean) Gets the non key fields. Declaration public List<MemberWrapper> GetNonKeyFields<T>(bool includeNonPublicAccessor) where T : class Parameters Type Name Description Boolean includeNonPublicAccessor Returns Type Description List < DotNetHelper.FastMember.Extension.Models.MemberWrapper > List<MemberWrapper>. Type Parameters Name Description T"
  },
  "api/DotNetHelper.ObjectToSql.Attribute.SqlColumnAttribute.html": {
    "href": "api/DotNetHelper.ObjectToSql.Attribute.SqlColumnAttribute.html",
    "title": "Class SqlColumnAttribute | DotNetHelper.ObjectToSql",
    "keywords": "Class SqlColumnAttribute Class SqlColumnAttribute. Inheritance Object Attribute SqlColumnAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Attribute Assembly : DotNetHelper.ObjectToSql.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property)] public class SqlColumnAttribute : Attribute, _Attribute Fields | Improve this Doc View Source MappingIds Gets or sets the mappings for keys to join with. Declaration public string[] MappingIds Field Value Type Description String [] an array of ids, that will join a column to another table. Properties | Improve this Doc View Source ApiId Gets or sets a value indicating whether [API identifier]. Declaration public bool? ApiId { get; set; } Property Value Type Description Nullable < Boolean > null if [API identifier] contains no value, true if [API identifier]; otherwise, false . | Improve this Doc View Source AutoIncrementBy Gets or sets the automatic increment by. If this value is set then the property will be treated as an IDENTITY column Declaration public int? AutoIncrementBy { get; set; } Property Value Type Description Nullable < Int32 > The automatic increment by. | Improve this Doc View Source DefaultValue Gets or sets the default value. Declaration public object DefaultValue { get; set; } Property Value Type Description Object The default value. | Improve this Doc View Source Ignore If true property will be use when the class is being used by a DATASOURCE Object Declaration public bool? Ignore { get; set; } Property Value Type Description Nullable < Boolean > null if [ignore] contains no value, true if [ignore]; otherwise, false . | Improve this Doc View Source IsIdentityKey Gets or sets the automatic increment by. If this value is set then the property will be treated as an IDENTITY column Declaration public bool? IsIdentityKey { get; set; } Property Value Type Description Nullable < Boolean > The automatic increment by. | Improve this Doc View Source MapTo If true property will be use when the class is being used by a DATASOURCE Object Declaration public string MapTo { get; set; } Property Value Type Description String The map to. | Improve this Doc View Source MaxColumnSize Defaults To MAX used for creating table Declaration public int? MaxColumnSize { get; set; } Property Value Type Description Nullable < Int32 > The maximum size of the column. | Improve this Doc View Source Nullable Gets or sets a value indicating whether this SqlColumnAttribute is nullable. Declaration public bool? Nullable { get; set; } Property Value Type Description Nullable < Boolean > null if [nullable] contains no value, true if [nullable]; otherwise, false . | Improve this Doc View Source PrimaryKey Gets or sets a value indicating whether [primary key]. Declaration public bool? PrimaryKey { get; set; } Property Value Type Description Nullable < Boolean > null if [primary key] contains no value, true if [primary key]; otherwise, false . | Improve this Doc View Source SerializableType Defaults To MAX used for creating table Declaration public SerializableType SerializableType { get; set; } Property Value Type Description SerializableType The maximum size of the column. | Improve this Doc View Source SetApiId Gets or sets a value indicating whether [set API identifier]. Declaration public bool SetApiId { get; set; } Property Value Type Description Boolean true if [set API identifier]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetAutoIncrementBy Gets or sets the set automatic increment by. Declaration public int SetAutoIncrementBy { get; set; } Property Value Type Description Int32 The set automatic increment by. Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetIgnore Gets or sets a value indicating whether [set ignore]. Declaration public bool SetIgnore { get; set; } Property Value Type Description Boolean true if [set ignore]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetIsIdentityKey Gets or sets the set automatic increment by. Declaration public bool SetIsIdentityKey { get; set; } Property Value Type Description Boolean The set automatic increment by. Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetMaxColumnSize Gets or sets the size of the set maximum column. Declaration public int SetMaxColumnSize { get; set; } Property Value Type Description Int32 The size of the set maximum column. Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetNullable Gets or sets a value indicating whether [set nullable]. Declaration public bool SetNullable { get; set; } Property Value Type Description Boolean true if [set nullable]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetPrimaryKey Gets or sets a value indicating whether [set primary key]. Declaration public bool SetPrimaryKey { get; set; } Property Value Type Description Boolean true if [set primary key]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetStartIncrementAt Gets or sets the set start increment at. Declaration public int SetStartIncrementAt { get; set; } Property Value Type Description Int32 The set start increment at. Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetSyncTime Gets or sets a value indicating whether [set synchronize time]. Declaration public bool SetSyncTime { get; set; } Property Value Type Description Boolean true if [set synchronize time]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetUtcDateTime Gets or sets a value indicating whether [set UTC date time]. Declaration public bool SetUtcDateTime { get; set; } Property Value Type Description Boolean true if [set UTC date time]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetxRefOnDeleteCascade Gets or sets a value indicating whether [setx reference on delete cascade]. Declaration public bool SetxRefOnDeleteCascade { get; } Property Value Type Description Boolean true if [setx reference on delete cascade]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetxRefOnUpdateCascade Gets or sets a value indicating whether [setx reference on update cascade]. Declaration public bool SetxRefOnUpdateCascade { get; } Property Value Type Description Boolean true if [setx reference on update cascade]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetxRefTableType Gets or sets the type of the setx reference table. Declaration public Type SetxRefTableType { get; set; } Property Value Type Description Type The type of the setx reference table. Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttribute wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source StartIncrementAt Gets or sets the start increment at. Declaration public int? StartIncrementAt { get; set; } Property Value Type Description Nullable < Int32 > The start increment at. | Improve this Doc View Source SyncTime When A Record Is Be Inserted Or Updated This Column Value Will Be DateTime.Now Declaration public bool? SyncTime { get; set; } Property Value Type Description Nullable < Boolean > null if [synchronize time] contains no value, true if [synchronize time]; otherwise, false . | Improve this Doc View Source TSQLDefaultValue Gets or sets the default value THIS IS ONLY WHEN THIS LIBRARY IS CREATING A TABLE SCRIPT Declaration public string TSQLDefaultValue { get; set; } Property Value Type Description String The default value. | Improve this Doc View Source UtcDateTime Gets or sets a value indicating whether [UTC date time]. Declaration public bool? UtcDateTime { get; set; } Property Value Type Description Nullable < Boolean > null if [UTC date time] contains no value, true if [UTC date time]; otherwise, false . | Improve this Doc View Source xRefJoinOnColumn Gets or sets the x reference join on column. Declaration public string xRefJoinOnColumn { get; set; } Property Value Type Description String The x reference join on column. | Improve this Doc View Source xRefOnDeleteCascade Gets or sets a value indicating whether [x reference on delete cascade]. Declaration public bool? xRefOnDeleteCascade { get; set; } Property Value Type Description Nullable < Boolean > null if [x reference on delete cascade] contains no value, true if [x reference on delete cascade]; otherwise, false . | Improve this Doc View Source xRefOnUpdateCascade Gets or sets a value indicating whether [x reference on update cascade]. Declaration public bool? xRefOnUpdateCascade { get; set; } Property Value Type Description Nullable < Boolean > null if [x reference on update cascade] contains no value, true if [x reference on update cascade]; otherwise, false . | Improve this Doc View Source xRefTableName Gets or sets the name of the x reference table. Declaration public string xRefTableName { get; set; } Property Value Type Description String The name of the x reference table. | Improve this Doc View Source xRefTableSchema Gets or sets the x reference table schema. Declaration public string xRefTableSchema { get; set; } Property Value Type Description String The x reference table schema. | Improve this Doc View Source xRefTableType Gets or sets the type of the x reference table. Declaration public Type xRefTableType { get; set; } Property Value Type Description Type The type of the x reference table. Implements System.Runtime.InteropServices._Attribute See Also Attribute"
  },
  "api/DotNetHelper.ObjectToSql.Enum.SQLJoinType.html": {
    "href": "api/DotNetHelper.ObjectToSql.Enum.SQLJoinType.html",
    "title": "Enum SQLJoinType | DotNetHelper.ObjectToSql",
    "keywords": "Enum SQLJoinType Namespace : DotNetHelper.ObjectToSql.Enum Assembly : DotNetHelper.ObjectToSql.dll Syntax public enum SQLJoinType Fields Name Description INNER SQL-style INNER JOIN semantics: Only records that produce a match are returned. LEFT SQL-style LEFT OUTER JOIN semantics: All records of the left table are returned. If the right table holds no matching records, the right side's columns contain NULL."
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper.ObjectToSql | DotNetHelper.ObjectToSql",
    "keywords": "DotNetHelper.ObjectToSql Description How to use // code snippet Targeted .NET Frameworks NET452 NETSTANDARD2.0"
  },
  "articles/sample.html": {
    "href": "articles/sample.html",
    "title": "Sample Article | DotNetHelper.ObjectToSql",
    "keywords": "Sample Article This is a example of how to reference an article"
  },
  "api/DotNetHelper.ObjectToSql.Attribute.html": {
    "href": "api/DotNetHelper.ObjectToSql.Attribute.html",
    "title": "Namespace DotNetHelper.ObjectToSql.Attribute | DotNetHelper.ObjectToSql",
    "keywords": "Namespace DotNetHelper.ObjectToSql.Attribute Classes SqlColumnAttribute Class SqlColumnAttribute. SqlTableAttribute This specifies that the following property is also an SQL table"
  },
  "api/DotNetHelper.ObjectToSql.Helper.html": {
    "href": "api/DotNetHelper.ObjectToSql.Helper.html",
    "title": "Namespace DotNetHelper.ObjectToSql.Helper | DotNetHelper.ObjectToSql",
    "keywords": "Namespace DotNetHelper.ObjectToSql.Helper Classes DBTypeMap ObjectToSqlHelper SqlSyntaxHelper"
  },
  "api/DotNetHelper.ObjectToSql.Enum.ScriptType.html": {
    "href": "api/DotNetHelper.ObjectToSql.Enum.ScriptType.html",
    "title": "Enum ScriptType | DotNetHelper.ObjectToSql",
    "keywords": "Enum ScriptType Namespace : DotNetHelper.ObjectToSql.Enum Assembly : DotNetHelper.ObjectToSql.dll Syntax public enum ScriptType Fields Name Description HumanReadable Parameterized"
  },
  "api/DotNetHelper.ObjectToSql.Tools.html": {
    "href": "api/DotNetHelper.ObjectToSql.Tools.html",
    "title": "Namespace DotNetHelper.ObjectToSql.Tools | DotNetHelper.ObjectToSql",
    "keywords": "Namespace DotNetHelper.ObjectToSql.Tools Classes DevelopersTools"
  },
  "api/DotNetHelper.ObjectToSql.Enum.DataBaseType.html": {
    "href": "api/DotNetHelper.ObjectToSql.Enum.DataBaseType.html",
    "title": "Enum DataBaseType | DotNetHelper.ObjectToSql",
    "keywords": "Enum DataBaseType Namespace : DotNetHelper.ObjectToSql.Enum Assembly : DotNetHelper.ObjectToSql.dll Syntax public enum DataBaseType Fields Name Description Access95 MySql Odbc Oledb Oracle Sqlite SqlServer"
  },
  "api/DotNetHelper.ObjectToSql.Attribute.SqlTableAttribute.html": {
    "href": "api/DotNetHelper.ObjectToSql.Attribute.SqlTableAttribute.html",
    "title": "Class SqlTableAttribute | DotNetHelper.ObjectToSql",
    "keywords": "Class SqlTableAttribute This specifies that the following property is also an SQL table Inheritance Object Attribute SqlTableAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Attribute Assembly : DotNetHelper.ObjectToSql.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property)] public class SqlTableAttribute : Attribute, _Attribute Properties | Improve this Doc View Source JoinType Gets or sets a value indicating whether [x reference on delete cascade]. Declaration public SQLJoinType JoinType { get; set; } Property Value Type Description SQLJoinType null if [x reference on delete cascade] contains no value, true if [x reference on delete cascade]; otherwise, false . | Improve this Doc View Source TableName The Sql Table name that this class data belongs to. Declaration public string TableName { get; set; } Property Value Type Description String The map to. | Improve this Doc View Source XReferenceTable Declaration public Type XReferenceTable { get; set; } Property Value Type Description Type Implements System.Runtime.InteropServices._Attribute See Also Attribute"
  },
  "api/DotNetHelper.ObjectToSql.Helper.SqlSyntaxHelper.html": {
    "href": "api/DotNetHelper.ObjectToSql.Helper.SqlSyntaxHelper.html",
    "title": "Class SqlSyntaxHelper | DotNetHelper.ObjectToSql",
    "keywords": "Class SqlSyntaxHelper Inheritance Object SqlSyntaxHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Helper Assembly : DotNetHelper.ObjectToSql.dll Syntax public class SqlSyntaxHelper Constructors | Improve this Doc View Source SqlSyntaxHelper(DataBaseType) Declaration public SqlSyntaxHelper(DataBaseType type) Parameters Type Name Description DataBaseType type Properties | Improve this Doc View Source DataBaseType Declaration public DataBaseType DataBaseType { get; } Property Value Type Description DataBaseType | Improve this Doc View Source EnclosedValueLookup Declaration public Dictionary<Type, string> EnclosedValueLookup { get; } Property Value Type Description Dictionary < Type , String > Methods | Improve this Doc View Source BuildIfExistStatement(String, String, String) Declaration public string BuildIfExistStatement(string selectStatement, string onTrueSql, string onFalseSql) Parameters Type Name Description String selectStatement String onTrueSql String onFalseSql Returns Type Description String | Improve this Doc View Source GetEnclosedValueChar(Type) Declaration public string GetEnclosedValueChar(Type type) Parameters Type Name Description Type type Returns Type Description String | Improve this Doc View Source GetTableClosedChar() Declaration public string GetTableClosedChar() Returns Type Description String | Improve this Doc View Source GetTableOpenChar() Declaration public string GetTableOpenChar() Returns Type Description String | Improve this Doc View Source RemoveBracketsChar(String) Declaration public string RemoveBracketsChar(string value) Parameters Type Name Description String value Returns Type Description String"
  },
  "api/DotNetHelper.ObjectToSql.Exceptions.html": {
    "href": "api/DotNetHelper.ObjectToSql.Exceptions.html",
    "title": "Namespace DotNetHelper.ObjectToSql.Exceptions | DotNetHelper.ObjectToSql",
    "keywords": "Namespace DotNetHelper.ObjectToSql.Exceptions Classes EmptyArgumentException Custom Exception that lets the user know a code change is required to fix this error MissingIdentityKeyAttributeException Custom Exception that lets the user know a code change is required to fix this error MissingKeyAttributeException Custom Exception that lets the user know a code change is required to fix this error"
  },
  "api/DotNetHelper.ObjectToSql.Services.html": {
    "href": "api/DotNetHelper.ObjectToSql.Services.html",
    "title": "Namespace DotNetHelper.ObjectToSql.Services | DotNetHelper.ObjectToSql",
    "keywords": "Namespace DotNetHelper.ObjectToSql.Services Classes ObjectToSql"
  },
  "api/DotNetHelper.ObjectToSql.Exceptions.MissingIdentityKeyAttributeException.html": {
    "href": "api/DotNetHelper.ObjectToSql.Exceptions.MissingIdentityKeyAttributeException.html",
    "title": "Class MissingIdentityKeyAttributeException | DotNetHelper.ObjectToSql",
    "keywords": "Class MissingIdentityKeyAttributeException Custom Exception that lets the user know a code change is required to fix this error Inheritance Object Exception MissingIdentityKeyAttributeException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Exceptions Assembly : DotNetHelper.ObjectToSql.dll Syntax [Serializable] public class MissingIdentityKeyAttributeException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source MissingIdentityKeyAttributeException() Just create the exception Declaration public MissingIdentityKeyAttributeException() | Improve this Doc View Source MissingIdentityKeyAttributeException(SerializationInfo, StreamingContext) Create the exception from serialized data. Usual scenario is when exception is occured somewhere on the remote workstation and we have to re-create/re-throw the exception on the local machine Declaration protected MissingIdentityKeyAttributeException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info Serialization info StreamingContext context Serialization context | Improve this Doc View Source MissingIdentityKeyAttributeException(String) Create the exception with description Declaration public MissingIdentityKeyAttributeException(string message) Parameters Type Name Description String message Exception description | Improve this Doc View Source MissingIdentityKeyAttributeException(String, Exception) Create the exception with description and inner cause Declaration public MissingIdentityKeyAttributeException(string message, Exception innerException) Parameters Type Name Description String message Exception description Exception innerException Exception inner cause Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/DotNetHelper.ObjectToSql.Enum.ActionType.html": {
    "href": "api/DotNetHelper.ObjectToSql.Enum.ActionType.html",
    "title": "Enum ActionType | DotNetHelper.ObjectToSql",
    "keywords": "Enum ActionType Namespace : DotNetHelper.ObjectToSql.Enum Assembly : DotNetHelper.ObjectToSql.dll Syntax public enum ActionType Fields Name Description Delete Insert Update Upsert"
  },
  "api/DotNetHelper.ObjectToSql.Extension.IDataParameterExtension.html": {
    "href": "api/DotNetHelper.ObjectToSql.Extension.IDataParameterExtension.html",
    "title": "Class IDataParameterExtension | DotNetHelper.ObjectToSql",
    "keywords": "Class IDataParameterExtension Inheritance Object IDataParameterExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Extension Assembly : DotNetHelper.ObjectToSql.dll Syntax public static class IDataParameterExtension Methods | Improve this Doc View Source AddRange<T>(IDataParameterCollection, IEnumerable<T>) Declaration public static void AddRange<T>(this IDataParameterCollection collection, IEnumerable<T> collectionToAdd) Parameters Type Name Description IDataParameterCollection collection IEnumerable <T> collectionToAdd Type Parameters Name Description T | Improve this Doc View Source ParamToSql(IDataParameterCollection, String) Declaration public static string ParamToSql(this IDataParameterCollection list, string query) Parameters Type Name Description IDataParameterCollection list String query Returns Type Description String"
  },
  "api/DotNetHelper.ObjectToSql.Extension.html": {
    "href": "api/DotNetHelper.ObjectToSql.Extension.html",
    "title": "Namespace DotNetHelper.ObjectToSql.Extension | DotNetHelper.ObjectToSql",
    "keywords": "Namespace DotNetHelper.ObjectToSql.Extension Classes IDataParameterExtension MemberWrapperExtension"
  },
  "api/DotNetHelper.ObjectToSql.Helper.DBTypeMap.html": {
    "href": "api/DotNetHelper.ObjectToSql.Helper.DBTypeMap.html",
    "title": "Class DBTypeMap | DotNetHelper.ObjectToSql",
    "keywords": "Class DBTypeMap Inheritance Object DBTypeMap Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Helper Assembly : DotNetHelper.ObjectToSql.dll Syntax public class DBTypeMap Constructors | Improve this Doc View Source DBTypeMap(DataBaseType) Declaration public DBTypeMap(DataBaseType dataBaseType) Parameters Type Name Description DataBaseType dataBaseType Properties | Improve this Doc View Source TypeToSqlTypeMap Declaration public Dictionary<Type, DbType> TypeToSqlTypeMap { get; } Property Value Type Description Dictionary < Type , DbType >"
  },
  "api/DotNetHelper.ObjectToSql.Enum.html": {
    "href": "api/DotNetHelper.ObjectToSql.Enum.html",
    "title": "Namespace DotNetHelper.ObjectToSql.Enum | DotNetHelper.ObjectToSql",
    "keywords": "Namespace DotNetHelper.ObjectToSql.Enum Enums ActionType DataBaseType ScriptType SerializableType SQLJoinType"
  },
  "api/DotNetHelper.ObjectToSql.Enum.SerializableType.html": {
    "href": "api/DotNetHelper.ObjectToSql.Enum.SerializableType.html",
    "title": "Enum SerializableType | DotNetHelper.ObjectToSql",
    "keywords": "Enum SerializableType Namespace : DotNetHelper.ObjectToSql.Enum Assembly : DotNetHelper.ObjectToSql.dll Syntax public enum SerializableType Fields Name Description CSV JSON NONE XML"
  },
  "api/DotNetHelper.ObjectToSql.Tools.DevelopersTools.html": {
    "href": "api/DotNetHelper.ObjectToSql.Tools.DevelopersTools.html",
    "title": "Class DevelopersTools | DotNetHelper.ObjectToSql",
    "keywords": "Class DevelopersTools Inheritance Object DevelopersTools Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Tools Assembly : DotNetHelper.ObjectToSql.dll Syntax public static class DevelopersTools Methods | Improve this Doc View Source ToCSharpClass(IDataReader, String, Boolean) Declaration public static string ToCSharpClass(IDataReader reader, string className = null, bool nullifyProperties = false) Parameters Type Name Description IDataReader reader String className Boolean nullifyProperties Returns Type Description String | Improve this Doc View Source TypeToSqlType(Type, DataBaseType) Declaration public static string TypeToSqlType(Type type, DataBaseType sqlType) Parameters Type Name Description Type type DataBaseType sqlType Returns Type Description String | Improve this Doc View Source XmlTCSharpClass(String) Declaration public static string XmlTCSharpClass(string xml) Parameters Type Name Description String xml Returns Type Description String"
  },
  "api/DotNetHelper.ObjectToSql.Services.ObjectToSql.html": {
    "href": "api/DotNetHelper.ObjectToSql.Services.ObjectToSql.html",
    "title": "Class ObjectToSql | DotNetHelper.ObjectToSql",
    "keywords": "Class ObjectToSql Inheritance Object ObjectToSql Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Services Assembly : DotNetHelper.ObjectToSql.dll Syntax public class ObjectToSql Constructors | Improve this Doc View Source ObjectToSql(DataBaseType) Declaration public ObjectToSql(DataBaseType type) Parameters Type Name Description DataBaseType type | Improve this Doc View Source ObjectToSql(DataBaseType, Boolean) Declaration public ObjectToSql(DataBaseType type, bool includeNonPublicAccessor) Parameters Type Name Description DataBaseType type Boolean includeNonPublicAccessor Properties | Improve this Doc View Source DatabaseType Declaration public DataBaseType DatabaseType { get; } Property Value Type Description DataBaseType | Improve this Doc View Source IncludeNonPublicAccessor Declaration public bool IncludeNonPublicAccessor { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source BuildDeleteQuery<T>(T, StringBuilder, String) Builds the delete query. Declaration public void BuildDeleteQuery<T>(T dynamicObject, StringBuilder sqlBuilder, string tableName) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type Parameters Name Description T | Improve this Doc View Source BuildDeleteQuery<T>(T, StringBuilder, String, List<String>) Builds the delete query. Declaration public void BuildDeleteQuery<T>(T dynamicObject, StringBuilder sqlBuilder, string tableName, List<string> overrideKeys) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. List < String > overrideKeys Type Parameters Name Description T | Improve this Doc View Source BuildDeleteQuery<T>(StringBuilder, String) Builds the delete query. Declaration public void BuildDeleteQuery<T>(StringBuilder sqlBuilder, string tableName) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type Parameters Name Description T | Improve this Doc View Source BuildDeleteQuery<T>(StringBuilder, String, Expression<Func<T, Object>>[]) Builds the delete query. Declaration public void BuildDeleteQuery<T>(StringBuilder sqlBuilder, string tableName, params Expression<Func<T, object>>[] overrideKeys) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Expression < Func <T, Object >>[] overrideKeys Type Parameters Name Description T | Improve this Doc View Source BuildGetQuery<T>(StringBuilder, String, String) Builds the get query. Declaration public void BuildGetQuery<T>(StringBuilder sqlBuilder, string tableName, string whereClause) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. String whereClause The where clause. Type Parameters Name Description T | Improve this Doc View Source BuildInsertQuery(StringBuilder, String, Type) Builds the insert query. Declaration public void BuildInsertQuery(StringBuilder sqlBuilder, string tableName, Type type) Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type type | Improve this Doc View Source BuildInsertQuery<T>(T, StringBuilder, String) Builds the insert query. Declaration public void BuildInsertQuery<T>(T poco, StringBuilder sqlBuilder, string tableName) where T : IDynamicMetaObjectProvider Parameters Type Name Description T poco StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type Parameters Name Description T | Improve this Doc View Source BuildInsertQuery<T>(StringBuilder, String) Builds the insert query. Declaration public void BuildInsertQuery<T>(StringBuilder sqlBuilder, string tableName) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type Parameters Name Description T | Improve this Doc View Source BuildInsertQueryWithIdentityOutputs<T>(StringBuilder, String) Builds the insert query and return the expression. Declaration public void BuildInsertQueryWithIdentityOutputs<T>(StringBuilder sqlBuilder, string tableName) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type Parameters Name Description T | Improve this Doc View Source BuildInsertQueryWithOutputs<T>(T, StringBuilder, String, List<String>) O Builds the insert query and return the expression. Declaration public void BuildInsertQueryWithOutputs<T>(T dynamicObject, StringBuilder sqlBuilder, string tableName, List<string> outFields) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. List < String > outFields Type Parameters Name Description T | Improve this Doc View Source BuildInsertQueryWithOutputs<T>(StringBuilder, String, Expression<Func<T, Object>>[]) Builds the insert query and return the expression. Declaration public void BuildInsertQueryWithOutputs<T>(StringBuilder sqlBuilder, string tableName, params Expression<Func<T, object>>[] outFields) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Expression < Func <T, Object >>[] outFields Type Parameters Name Description T | Improve this Doc View Source BuildUpdateQuery<T>(T, StringBuilder, String) Builds the update query. Declaration public void BuildUpdateQuery<T>(T dynamicObject, StringBuilder sqlBuilder, string tableName) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type Parameters Name Description T | Improve this Doc View Source BuildUpdateQuery<T>(T, StringBuilder, String, List<String>) Builds the update query. Declaration public void BuildUpdateQuery<T>(T dynamicObject, StringBuilder sqlBuilder, string tableName, List<string> overrideKeys) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. List < String > overrideKeys Type Parameters Name Description T | Improve this Doc View Source BuildUpdateQuery<T>(StringBuilder, String) Builds the update query. Declaration public void BuildUpdateQuery<T>(StringBuilder sqlBuilder, string tableName) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type Parameters Name Description T | Improve this Doc View Source BuildUpdateQuery<T>(StringBuilder, String, Expression<Func<T, Object>>[]) Builds the update query. Declaration public void BuildUpdateQuery<T>(StringBuilder sqlBuilder, string tableName, params Expression<Func<T, object>>[] overrideKeys) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Expression < Func <T, Object >>[] overrideKeys Type Parameters Name Description T | Improve this Doc View Source BuildUpsertQuery<T>(T, StringBuilder, String) Builds the upsert query. Declaration public void BuildUpsertQuery<T>(T dynamicObject, StringBuilder sqlBuilder, string tableName) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type Parameters Name Description T | Improve this Doc View Source BuildUpsertQuery<T>(T, StringBuilder, String, List<String>) Builds the upsert query. Declaration public void BuildUpsertQuery<T>(T dynamicObject, StringBuilder sqlBuilder, string tableName, List<string> overrideKeys) where T : IDynamicMetaObjectProvider Parameters Type Name Description T dynamicObject StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. List < String > overrideKeys Type Parameters Name Description T | Improve this Doc View Source BuildUpsertQuery<T>(StringBuilder, String) Builds the upsert query. Declaration public void BuildUpsertQuery<T>(StringBuilder sqlBuilder, string tableName) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type Parameters Name Description T | Improve this Doc View Source BuildUpsertQuery<T>(StringBuilder, String, Expression<Func<T, Object>>[]) Declaration public void BuildUpsertQuery<T>(StringBuilder sqlBuilder, string tableName, params Expression<Func<T, object>>[] overrideKeys) where T : class Parameters Type Name Description StringBuilder sqlBuilder String tableName Expression < Func <T, Object >>[] overrideKeys Type Parameters Name Description T"
  },
  "api/DotNetHelper.ObjectToSql.Exceptions.EmptyArgumentException.html": {
    "href": "api/DotNetHelper.ObjectToSql.Exceptions.EmptyArgumentException.html",
    "title": "Class EmptyArgumentException | DotNetHelper.ObjectToSql",
    "keywords": "Class EmptyArgumentException Custom Exception that lets the user know a code change is required to fix this error Inheritance Object Exception EmptyArgumentException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Exceptions Assembly : DotNetHelper.ObjectToSql.dll Syntax [Serializable] public class EmptyArgumentException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source EmptyArgumentException() Just create the exception Declaration public EmptyArgumentException() | Improve this Doc View Source EmptyArgumentException(SerializationInfo, StreamingContext) Create the exception from serialized data. Usual scenario is when exception is occured somewhere on the remote workstation and we have to re-create/re-throw the exception on the local machine Declaration protected EmptyArgumentException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info Serialization info StreamingContext context Serialization context | Improve this Doc View Source EmptyArgumentException(String) Create the exception with description Declaration public EmptyArgumentException(string message) Parameters Type Name Description String message Exception description | Improve this Doc View Source EmptyArgumentException(String, Exception) Create the exception with description and inner cause Declaration public EmptyArgumentException(string message, Exception innerException) Parameters Type Name Description String message Exception description Exception innerException Exception inner cause Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/DotNetHelper.ObjectToSql.Extension.MemberWrapperExtension.html": {
    "href": "api/DotNetHelper.ObjectToSql.Extension.MemberWrapperExtension.html",
    "title": "Class MemberWrapperExtension | DotNetHelper.ObjectToSql",
    "keywords": "Class MemberWrapperExtension Inheritance Object MemberWrapperExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.ObjectToSql.Extension Assembly : DotNetHelper.ObjectToSql.dll Syntax public static class MemberWrapperExtension Methods | Improve this Doc View Source GetNameFromCustomAttributeOrDefault(MemberWrapper) Declaration public static string GetNameFromCustomAttributeOrDefault(this MemberWrapper member) Parameters Type Name Description DotNetHelper.FastMember.Extension.Models.MemberWrapper member Returns Type Description String | Improve this Doc View Source IsMemberAnIdentityColumn(MemberWrapper) Declaration public static bool IsMemberAnIdentityColumn(this MemberWrapper member) Parameters Type Name Description DotNetHelper.FastMember.Extension.Models.MemberWrapper member Returns Type Description Boolean | Improve this Doc View Source IsMemberAPrimaryKeyColumn(MemberWrapper) Declaration public static bool IsMemberAPrimaryKeyColumn(this MemberWrapper member) Parameters Type Name Description DotNetHelper.FastMember.Extension.Models.MemberWrapper member Returns Type Description Boolean | Improve this Doc View Source IsMemberASerializableColumn(MemberWrapper) Declaration public static bool IsMemberASerializableColumn(this MemberWrapper member) Parameters Type Name Description DotNetHelper.FastMember.Extension.Models.MemberWrapper member Returns Type Description Boolean | Improve this Doc View Source ShouldMemberBeIgnored(MemberWrapper) Declaration public static bool ShouldMemberBeIgnored(this MemberWrapper member) Parameters Type Name Description DotNetHelper.FastMember.Extension.Models.MemberWrapper member Returns Type Description Boolean"
  }
}